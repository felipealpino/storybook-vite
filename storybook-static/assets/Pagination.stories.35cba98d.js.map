{"version":3,"file":"Pagination.stories.35cba98d.js","sources":["../../src/components/Pagination/styles.ts","../../src/components/Pagination/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { IPagination } from '.';\nimport { colorGet } from '../../shared/utils/colorGet';\n\ntype IPaginationProps = IPagination & {\n  isFirstPage: boolean;\n  isLastPage: boolean;\n};\n\nexport const PaginationContainer = styled.div<IPaginationProps>`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n\n  .pagination-content {\n    display: flex;\n\n    span {\n      margin: auto;\n      font-weight: 700;\n    }\n\n    .pagination-content-icon {\n      cursor: pointer;\n      margin: 0px 10px;\n      transition: background-color 0.1s ease-in-out;\n      background-color: ${({ status }) => colorGet(status, 500)};\n      border-radius: ${({ rounded }) => (rounded ? '15px' : '4px')};\n      display: flex;\n      transition: 0.1s ease-in-out;\n\n      svg {\n        width: 25px;\n        height: 25px;\n        color: ${({ status }) => colorGet(status, 'Contrast')};\n      }\n\n      &:hover {\n        background-color: ${({ status }) => colorGet(status, 600)};\n      }\n    }\n  }\n\n  ${({ isFirstPage }) =>\n    isFirstPage &&\n    `\n    .pagination-content-icon.back {\n      opacity: 0.3;\n    }\n  \n  `}\n\n  ${({ isLastPage }) =>\n    isLastPage &&\n    `\n    .pagination-content-icon.forward {\n      opacity: 0.3;\n    }\n  \n  `}\n`;\n","import React, { useCallback, useState } from \"react\";\nimport { ElementStatus } from \"../../shared/theme/colors\";\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\n\nimport { PaginationContainer } from \"./styles\";\n\nexport interface IPagination {\n  totalOfPages: number;\n  currentPage: number;\n  status?: ElementStatus;\n  rounded?: boolean;\n  className?: string;\n  callbackGetListData: (page: number) => Promise<void>;\n}\n\nconst Pagination: React.FC<IPagination> = ({\n  rounded = true,\n  callbackGetListData,\n  ...props\n}) => {\n  const [isFirstPage, setIsFirstPage] = useState<boolean>(true);\n  const [isLastPage, setIsLastPage] = useState<boolean>(false);\n\n  const goBackPage = useCallback(() => {\n    const newPage = Number(props.currentPage) - 1;\n\n    if (newPage + 1 === 1) setIsFirstPage(true);\n    if (newPage < 0) return;\n\n    setIsLastPage(false);\n    callbackGetListData(newPage);\n  }, [callbackGetListData, props.currentPage]);\n\n  const goForwardPage = useCallback(() => {\n    const newPage = Number(props.currentPage) + 1;\n\n    if (newPage + 1 === props.totalOfPages) setIsLastPage(true);\n    if (newPage >= props.totalOfPages) return;\n\n    setIsFirstPage(false);\n    callbackGetListData(newPage);\n  }, [callbackGetListData, props.currentPage, props.totalOfPages]);\n\n  return (\n    <PaginationContainer\n      {...props}\n      callbackGetListData={callbackGetListData}\n      isFirstPage={isFirstPage}\n      isLastPage={isLastPage}\n      rounded={rounded}\n      className={`pagination-container ${props.className || \"\"}`}\n    >\n      <div className=\"pagination-content\">\n        <label className=\"pagination-content-icon back\" onClick={goBackPage}>\n          <FiChevronLeft color=\"#FFFFFF\" />\n        </label>\n        <span className=\"pagination-content-text\">\n          PÃ¡gina {Number(props.currentPage) + 1} de{\" \"}\n          {props.totalOfPages > 0 ? props.totalOfPages : 1}\n        </span>\n        <label\n          className=\"pagination-content-icon forward\"\n          onClick={goForwardPage}\n        >\n          <FiChevronRight color=\"#FFFFFF\" />\n        </label>\n      </div>\n    </PaginationContainer>\n  );\n};\n\nexport { Pagination };\n"],"names":["PaginationContainer","styled","status","colorGet","rounded","isFirstPage","isLastPage","Pagination","callbackGetListData","setIsFirstPage","useState","setIsLastPage","goBackPage","useCallback","newPage","props","goForwardPage","_jsx","_jsxs"],"mappings":"uOASO,MAAMA,EAAsBC,EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAkBhB,CAAC,CAAE,OAAAC,CAAa,IAAAC,EAASD,EAAQ,GAAG;AAAA,uBACvC,CAAC,CAAE,QAAAE,CAAQ,IAAOA,EAAU,OAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAO3C,CAAC,CAAE,OAAAF,CAAa,IAAAC,EAASD,EAAQ,UAAU;AAAA;AAAA;AAAA;AAAA,4BAIhC,CAAC,CAAE,OAAAA,CAAa,IAAAC,EAASD,EAAQ,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,IAK5D,CAAC,CAAE,YAAAG,KACHA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,CAAC,CAAE,WAAAC,KACHA,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECxCJC,EAAA,CAAA,CAA2C,QAAAH,EAAA,GAC/B,oBAAAI,KACVA,CAFyC,IAAA,CAKzC,KAAA,CAAAH,EAAAI,CAAA,EAAAC,EAAA,QAAA,SAAA,EAAA,EACA,CAAAJ,EAAAK,CAAA,EAAAD,EAAA,QAAA,SAAA,EAAA,EAEAE,EAAAC,EAAAA,QAAAA,YAAA,IAAA,CACE,MAAAC,EAAA,OAAAC,EAAA,WAAA,EAAA,EAEAD,EAAA,IAAA,GAAuBL,EAAAA,EAAAA,EACvB,EAAAK,EAAA,KAEAH,EAAAA,EAAAA,EACAH,EAAAA,CAAAA,EAAmB,EAAA,CAAAA,EAAAO,EAAA,WAAA,CAAA,EAGrBC,EAAAH,EAAAA,QAAAA,YAAA,IAAA,CACE,MAAAC,EAAA,OAAAC,EAAA,WAAA,EAAA,EAEAD,EAAA,IAAAC,EAAA,cAAwCJ,EAAAA,EAAAA,EACxC,EAAAG,GAAAC,EAAA,gBAEAN,EAAAA,EAAAA,EACAD,EAAAA,CAAAA,EAAmB,EAAA,CAAAA,EAAAO,EAAA,YAAAA,EAAA,YAAA,CAAA,EAGrB,OAAAE,EAAAjB,EAAA,CACE,GAAAe,EACMA,oBAAAA,EACJ,YAAAV,EACA,WAAAC,EACA,QAAAF,EACA,UAAA,wBAAAW,EAAA,WAAA,KACsD,SAAAG,EAAA,MAAA,CAEtD,UAAA,qBAAe,SAAA,CAAAD,EAAA,QAAA,CACb,UAAA,+BAAiB,QAAAL,EAAwCA,SAAAA,EAAAA,EAAAA,CACvD,MAAA,SAAqB,CAAA,CAArB,CAAA,EAAAM,EAAA,OAAA,CAEF,UAAA,0BAAgB,SAAA,CAAA,aAAA,OAAAH,EAAA,WAAA,EAAA,EAAA,MAAA,IAAAA,EAAA,aAAA,EAAAA,EAAA,aAAA,CAAA,CAAhB,CAAA,EAAAE,EAAA,QAAA,CAIA,UAAA,kCACY,QAAAD,EACDA,SAAAA,EAAAA,EAAAA,CAET,MAAA,SAAsB,CAAA,CAAtB,CAAA,CAAA,CAZJ,CAAA,CAAA,CAAA,CAiBL;;;;;;;;;;;;;;;;;;;;;;;;"}