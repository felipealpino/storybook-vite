{"version":3,"file":"Tabs.stories.90fe05ba.js","sources":["../../src/components/Tabs/Tab/styles.ts","../../src/components/Tabs/Tab/index.tsx","../../src/components/Tabs/Tabs/styles.ts","../../src/components/Tabs/Tabs/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ITabComplete } from '.';\nimport { colorGet } from '../../../shared/utils';\n\nexport const TabContainer = styled.div<ITabComplete>`\n  opacity: ${(props) => (props.disabled ? '0.5' : '1')};\n  border-bottom: 3px solid ${colorGet('basic', 400)};\n  padding: 10px 16px;\n  cursor: ${(props) => (props.disabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  flex-direction: ${({ iconposition }) => (iconposition === 'top' || iconposition === 'bottom' ? 'column' : 'row')};\n`;\n","import React, { useCallback } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { IPosition } from '../../../shared/interfaces';\nimport { ElementStatus } from '../../../shared/theme/colors';\nimport { colorGet } from '../../../shared/utils/colorGet';\nimport { TabContainer } from './styles';\n\nexport interface ITab {\n  label: string;\n  index: number;\n  className?: string;\n  componentToRender?: any;\n  icon?: React.ComponentType<IconBaseProps>;\n  iconposition?: IPosition;\n  iconfill?: string;\n  clickTabCallback?: () => void;\n  disabled?: boolean;\n}\n\nexport type ITabComplete = ITab & {\n  status?: ElementStatus;\n  selectedTab: number;\n  handleOnChangeTab: (clickedTab: number) => void;\n};\n\nconst Tab: React.FC<ITabComplete> = ({ className, iconposition = 'left', icon: Icon, clickTabCallback, handleOnChangeTab, ...props }) => {\n  const handleOnClick = useCallback(() => {\n    handleOnChangeTab(props.index);\n    clickTabCallback && clickTabCallback();\n  }, [clickTabCallback, handleOnChangeTab, props.index]);\n\n  return (\n    <TabContainer\n      handleOnChangeTab={handleOnChangeTab}\n      iconposition={iconposition}\n      className={`tab-option ${className ? className : ''}`}\n      onClick={handleOnClick}\n      {...props}\n    >\n      {Icon && (iconposition === 'left' || iconposition === 'top') && <Icon color={colorGet('basic', 800)} fill={props.iconfill || 'transparent'} />}\n\n      <span>{props.label}</span>\n\n      {Icon && (iconposition === 'right' || iconposition === 'bottom') && (\n        <Icon color={colorGet('basic', 800)} fill={props.iconfill || 'transparent'} />\n      )}\n    </TabContainer>\n  );\n};\n\nexport { Tab };\n","import styled from 'styled-components';\nimport { ITabs } from '.';\nimport { colorGet } from '../../../shared/utils';\n\nexport const TabsContainer = styled.div<ITabs>`\n  background: #fff;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1;\n\n  .tab-options-list {\n    min-height: 50px;\n    font-weight: 600;\n    user-select: none;\n    display: flex;\n    overflow-x: auto;\n    padding-bottom: 2px;\n    justify-content: ${({ tabsPosition }) => tabsPosition};\n  }\n\n  .selected {\n    color: ${({ status }) => colorGet(status, 600)};\n    border-bottom: 3px solid ${({ status }) => status && colorGet(status, 600)};\n\n    svg {\n      color: ${({ status }) => colorGet(status, 600)} !important;\n    }\n  }\n\n  .rendered-components-container {\n    .rendered-tab {\n      display: none;\n    }\n\n    .rendered-tab.--show {\n      display: block;\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { ElementStatus } from '../../../shared/theme/colors';\nimport { ITab, Tab } from '../Tab';\nimport { TabsContainer } from './styles';\n\nexport interface ITabs {\n  className?: string;\n  status?: ElementStatus;\n  selectedTabIndex?: number;\n  handleOnChangeTab?: (selectedTabIndex: number) => void;\n  tabs: ITab[];\n  shouldResetTabsStates?: boolean;\n  tabsPosition?: 'flex-start' | 'flex-end' | 'space-around' | 'space-between' | 'space-evenly' | 'center';\n}\n\nconst Tabs: React.FC<ITabs> = ({ className, ...props }) => {\n  const [selectedTab, setSelectedTab] = useState<number>(0);\n\n  useEffect(() => {\n    props.selectedTabIndex && setSelectedTab(props.selectedTabIndex);\n  }, [props.selectedTabIndex]);\n\n  const handleOnChangeTab = useCallback((clickedTab: number) => {\n    setSelectedTab(clickedTab);\n  }, []);\n\n  const renderedResetedTab = useMemo(() => {\n    const foundTab = props.tabs.find((tab) => tab.index === selectedTab);\n    if (!foundTab) throw new Error('TAB NOT FOUND');\n    return foundTab.componentToRender;\n  }, [props.tabs, selectedTab]);\n\n  return (\n    <TabsContainer className={`tabs-container ${className ? className : ''}`} {...props}>\n      <ul className=\"tab-options-list\">\n        {props.tabs.map((tab) => (\n          <Tab\n            {...tab}\n            key={tab.index}\n            className={`${selectedTab === tab.index ? 'selected' : ''}`}\n            selectedTab={selectedTab}\n            handleOnChangeTab={(clickedTab) => !tab.disabled && handleOnChangeTab(clickedTab)}\n            clickTabCallback={tab.clickTabCallback}\n          />\n        ))}\n      </ul>\n      <div className=\"rendered-components-container\">\n        {/* Render all components to render */}\n        {!props.shouldResetTabsStates &&\n          props.tabs.map((tab) => (\n            <div key={tab.index} className={`rendered-tab ${tab.index === selectedTab ? '--show' : ''}`}>\n              {tab.componentToRender}\n            </div>\n          ))}\n\n        {/* Render just one component to render  */}\n        {props.shouldResetTabsStates && renderedResetedTab}\n      </div>\n    </TabsContainer>\n  );\n};\n\nexport { Tabs };\n"],"names":["TabContainer","styled","props","colorGet","iconposition","Tab","className","Icon","clickTabCallback","handleOnChangeTab","handleOnClick","useCallback","_jsxs","_jsx","label","TabsContainer","tabsPosition","status","Tabs","selectedTab","setSelectedTab","useState","useEffect","clickedTab","renderedResetedTab","useMemo","foundTab","tab","componentToRender","_createElement","index"],"mappings":"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"}