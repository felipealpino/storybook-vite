{"version":3,"file":"Uploader.stories.f935b431.js","sources":["../../src/components/Uploader/styles.ts","../../src/components/Uploader/index.tsx"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\nimport { IUploader } from \".\";\r\n\r\nexport const ContainerUploader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const FileUploaderContainer = styled.div<\r\n  Pick<IUploader, \"height\" | \"width\">\r\n>`\r\n  height: ${({ height }) => `${height}px`};\r\n  width: ${({ width }) => `${width}px`};\r\n  text-align: center;\r\n  position: relative;\r\n`;\r\n\r\ntype ILabelFileUpload = {\r\n  isDragActive: boolean;\r\n  backgroundColor: string;\r\n};\r\nexport const LabelFileUpload = styled.div<ILabelFileUpload>`\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-width: 2px;\r\n  border-radius: 1rem;\r\n  border-style: dashed;\r\n  background: ${({ backgroundColor }) => backgroundColor};\r\n  border-color: black;\r\n\r\n  > div {\r\n    p {\r\n      color: black;\r\n      margin-bottom: 0.5rem;\r\n    }\r\n    button {\r\n      color: black;\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  transition: filter 0.1s;\r\n\r\n  ${({ isDragActive }) =>\r\n    isDragActive &&\r\n    css`\r\n      filter: brightness(0.8);\r\n    `}\r\n`;\r\n\r\nexport const UploadButton = styled.button`\r\n  padding: 0.25rem;\r\n  font-size: 1rem;\r\n  border: none;\r\n  background: transparent;\r\n  margin-bottom: 1rem;\r\n\r\n  &:hover {\r\n    text-decoration-line: underline;\r\n  }\r\n`;\r\n\r\nexport const DragFileElement = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 1rem;\r\n  top: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  left: 0px;\r\n`;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport {\r\n  ContainerUploader,\r\n  FileUploaderContainer,\r\n  DragFileElement,\r\n  LabelFileUpload,\r\n  UploadButton,\r\n} from \"./styles\";\r\n\r\nexport interface IUploader {\r\n  handleUploadCallback: (files: IUploaderResponde[]) => void;\r\n  backgroundColor?: string;\r\n  validTypes?: string[];\r\n  maxSize?: number;\r\n  height?: number;\r\n  width?: number;\r\n}\r\n\r\ntype IUploaderResponde = {\r\n  file: File;\r\n  isValid: boolean;\r\n  invalidReason: \"invalid file type\" | \"invalid file size\" | null;\r\n};\r\n\r\nconst Uploader: React.FC<IUploader> = ({\r\n  width = 400,\r\n  height = 200,\r\n  handleUploadCallback,\r\n  maxSize,\r\n  validTypes,\r\n  backgroundColor = \"#FFFFFF\",\r\n}) => {\r\n  const [dragActive, setDragActive] = useState<boolean>(false);\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  // triggers when file is selected with click\r\n  const onButtonClick = () => {\r\n    inputRef.current?.click();\r\n  };\r\n\r\n  const handleDrag = (event: React.DragEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    setDragActive(event.type === \"dragenter\" || event.type === \"dragover\");\r\n  };\r\n\r\n  const validateFiles = useCallback(\r\n    (files: FileList) => {\r\n      const validFiles: IUploaderResponde[] = Array.from(files).map((file) => {\r\n        if (maxSize && file.size > maxSize)\r\n          return {\r\n            file: file,\r\n            isValid: false,\r\n            invalidReason: \"invalid file size\",\r\n          };\r\n\r\n        if (validTypes && !validTypes.includes(file.type))\r\n          return {\r\n            file: file,\r\n            isValid: false,\r\n            invalidReason: \"invalid file type\",\r\n          };\r\n\r\n        return {\r\n          file: file,\r\n          isValid: true,\r\n          invalidReason: null,\r\n        };\r\n      });\r\n\r\n      return validFiles;\r\n    },\r\n    [maxSize, validTypes]\r\n  );\r\n\r\n  // triggers when file is dropped\r\n  const handleDrop = useCallback(\r\n    (event: React.DragEvent<HTMLDivElement>) => {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      setDragActive(false);\r\n      if (!event.dataTransfer.files || !event.dataTransfer.files[0]) return;\r\n\r\n      const filteredValidFiles = validateFiles(event.dataTransfer.files);\r\n\r\n      handleUploadCallback(filteredValidFiles);\r\n    },\r\n    [handleUploadCallback, validateFiles]\r\n  );\r\n\r\n  // triggers when file is selected with click\r\n  const handleChange = useCallback(\r\n    (event: React.ChangeEvent<HTMLInputElement>) => {\r\n      event.preventDefault();\r\n      if (!event.target.files || !event.target.files[0]) return;\r\n      const filteredValidFiles = validateFiles(event.target.files);\r\n      handleUploadCallback(filteredValidFiles);\r\n    },\r\n    [handleUploadCallback, validateFiles]\r\n  );\r\n\r\n  return (\r\n    <ContainerUploader className=\"container-uploader\">\r\n      <FileUploaderContainer\r\n        width={width}\r\n        height={height}\r\n        className=\"file-uploader-container\"\r\n        onDragEnter={(event) => handleDrag(event)}\r\n      >\r\n        <input\r\n          multiple\r\n          type=\"file\"\r\n          ref={inputRef}\r\n          style={{ display: \"none\" }}\r\n          accept=\"image/jpeg, image/jpg, image/png\"\r\n          onChange={(event) => handleChange(event)}\r\n        />\r\n\r\n        <LabelFileUpload\r\n          backgroundColor={backgroundColor}\r\n          isDragActive={dragActive}\r\n        >\r\n          <div>\r\n            <p>Drag and drop your files here or</p>\r\n            <UploadButton onClick={onButtonClick}>Upload a file</UploadButton>\r\n            {validTypes && (\r\n              <p>Valid formats: {validTypes.map((type) => type + \" \")}</p>\r\n            )}\r\n            {!!maxSize ? <p>Max Size: {maxSize}</p> : '' }\r\n          </div>\r\n        </LabelFileUpload>\r\n\r\n        {dragActive && (\r\n          <DragFileElement\r\n            onDrop={(event) => handleDrop(event)}\r\n            onDragEnter={(event) => handleDrag(event)}\r\n            onDragLeave={(event) => handleDrag(event)}\r\n            onDragOver={(event) => handleDrag(event)}\r\n          ></DragFileElement>\r\n        )}\r\n      </FileUploaderContainer>\r\n    </ContainerUploader>\r\n  );\r\n};\r\n\r\nexport { Uploader };\r\n"],"names":["ContainerUploader","styled","FileUploaderContainer","height","width","LabelFileUpload","backgroundColor","isDragActive","css","UploadButton","DragFileElement","Uploader","handleUploadCallback","maxSize","validTypes","dragActive","setDragActive","useState","inputRef","React","onButtonClick","handleDrag","event","validateFiles","useCallback","files","file","validFiles","handleDrop","filteredValidFiles","handleChange","_jsx","_jsxs","type"],"mappings":"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"}